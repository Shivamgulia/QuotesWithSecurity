{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/regenerator/index.js","components/hooks/use-http.js","components/lib/api.js","../node_modules/regenerator-runtime/runtime.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","err","undefined","module","exports","httpReducer","state","action","type","data","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","url","getAllQuotes","props","fetch","headers","Authorization","response","json","ok","console","log","Error","transformedQuotes","quoteObj","id","getSingleQuote","token","loadedQuote","addQuote","method","body","JSON","stringify","quoteData","addComment","commentData","commentId","name","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"static/js/0.4c22f1e9.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = require(\"regenerator-runtime\");\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const url = 'http://ec2-13-233-232-148.ap-south-1.compute.amazonaws.com:8080/';\n\nexport async function getAllQuotes(props) {\n  // console.log({\n  //   'Content-Type': 'application/json',\n  //   Authorization: 'Bearer ' + props,\n  // });\n  const response = await fetch(url + 'quotes', {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props,\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    console.log(response);\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(props) {\n  const response = await fetch(`${url}quotes/${props.id}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${props.token}`,\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: props.id,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(props) {\n  const response = await fetch(url + 'quotes/', {\n    method: 'POST',\n    body: JSON.stringify(props.quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${props.token}`,\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\n// export async function deleteQuote(quoteId) {\n//   console.log('a' + quoteId);\n//   const response = await fetch(`http://localhost:8080/quotes/${quoteId}`, {\n//     method: 'DELETE',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   });\n//   const data = await response.json();\n\n//   if (!response.ok) {\n//     throw new Error(data.message || 'Could not create quote.');\n//   }\n//   console.log('well');\n\n//   return null;\n// }\n\nexport async function addComment(props) {\n  const response = await fetch(url + 'comments', {\n    method: 'POST',\n    body: JSON.stringify(props.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${props.token}`,\n    },\n  });\n  const data = await response.json();\n  console.log(response);\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}