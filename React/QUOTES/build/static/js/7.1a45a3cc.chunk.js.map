{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/hooks/use-http.js","components/lib/api.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","match","useRouteMatch","History","useHistory","Location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","url","list","map","quote","NoQuotesFound","noquotes","AllQuotes","authCtx","useContext","AuthContext","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","token","useCallback","LoadingSpinner","length","httpReducer","state","action","type","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","dispatch","requestData","a","message","fetch","headers","Authorization","response","json","ok","console","log","Error","key","transformedQuotes","quoteObj","getSingleQuote","loadedQuote","addQuote","method","body","JSON","stringify","quoteData","addComment","commentData","commentId","name"],"mappings":"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","file":"static/js/7.1a45a3cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const match = useRouteMatch();\n  const History = useHistory();\n  const Location = useLocation();\n\n  const queryParams = new URLSearchParams(Location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    History.push(`${match.url}?sort=${isSortingAscending ? 'desc' : 'asc'}`);\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.quote}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Fragment, useContext } from 'react';\nimport { useEffect, useCallback } from 'react/cjs/react.development';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../components/hooks/use-http';\nimport { getAllQuotes } from '../components/lib/api';\nimport AuthContext from '../store/auth-context';\n\nconst AllQuotes = () => {\n  const authCtx = useContext(AuthContext);\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest(authCtx.token);\n  }, [sendRequest, authCtx.token]);\n  // console.log(loadedQuotes);\n\n  useCallback(() => {\n    sendRequest(authCtx.token);\n  }, [sendRequest, authCtx.token]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <Fragment>\n      <QuoteList quotes={loadedQuotes} />\n    </Fragment>\n  );\n};\n\nexport default AllQuotes;\n","import { useReducer, useCallback } from \"react\";\n\nfunction httpReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const url = 'http://ec2-13-233-232-148.ap-south-1.compute.amazonaws.com:8080/';\n\nexport async function getAllQuotes(props) {\n  // console.log({\n  //   'Content-Type': 'application/json',\n  //   Authorization: 'Bearer ' + props,\n  // });\n  const response = await fetch(url + 'quotes', {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + props,\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    console.log(response);\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(props) {\n  const response = await fetch(`${url}quotes/${props.id}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${props.token}`,\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: props.id,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(props) {\n  const response = await fetch(url + 'quotes/', {\n    method: 'POST',\n    body: JSON.stringify(props.quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${props.token}`,\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\n// export async function deleteQuote(quoteId) {\n//   console.log('a' + quoteId);\n//   const response = await fetch(`http://localhost:8080/quotes/${quoteId}`, {\n//     method: 'DELETE',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//   });\n//   const data = await response.json();\n\n//   if (!response.ok) {\n//     throw new Error(data.message || 'Could not create quote.');\n//   }\n//   console.log('well');\n\n//   return null;\n// }\n\nexport async function addComment(props) {\n  const response = await fetch(url + 'comments', {\n    method: 'POST',\n    body: JSON.stringify(props.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${props.token}`,\n    },\n  });\n  const data = await response.json();\n  console.log(response);\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n"],"sourceRoot":""}