{"version":3,"sources":["store/auth-context.js","components/UI/LoadingSpinner.js","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js","components/layout/MainNavigation.module.css"],"names":["logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","children","LoadingSpinner","className","classes","spinner","module","exports","MainNavigation","authCtx","useContext","loggedin","header","logo","nav","to","activeClassName","active","onClick","Layout","main","App","QuoteDetails","lazy","NewQuote","AllQuotes","NotFound","AuthPage","loggedIn","fallback","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.428526d7.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      // console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","import { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n  const logoutHandler = () => {\n    authCtx.logout();\n  };\n  const loggedin = authCtx.isLoggedIn;\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quote</div>\n      <nav className={classes.nav}>\n        <ul>\n          {loggedin && (\n            <li>\n              <NavLink to=\"/quotes\" activeClassName={classes.active}>\n                All Quotes\n              </NavLink>\n            </li>\n          )}\n          {loggedin && (\n            <li>\n              <NavLink to=\"/new-quote\" activeClassName={classes.active}>\n                Add Quote\n              </NavLink>\n            </li>\n          )}\n          {loggedin && (\n            <li>\n              <NavLink\n                to=\"/new-quote\"\n                activeClassName={classes.active}\n                onClick={logoutHandler}\n              >\n                Logout\n              </NavLink>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react\";\n\nimport classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { useContext, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Layout from './components/layout/Layout';\nimport LoadingSpinner from './components/UI/LoadingSpinner';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const QuoteDetails = React.lazy(() => import('./pages/QuoteDetails'));\n  const NewQuote = React.lazy(() => import('./pages/NewQuote'));\n  const AllQuotes = React.lazy(() => import('./pages/AllQuotes'));\n  const NotFound = React.lazy(() => import('./pages/NotFound'));\n  const AuthPage = React.lazy(() => import('./pages/AuthPage'));\n\n  const authCtx = useContext(AuthContext);\n  const loggedIn = authCtx.isLoggedIn;\n\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Switch>\n          <Route path=\"/\" exact>\n            {loggedIn && <Redirect to=\"/quotes\" />}\n            {!loggedIn && <Redirect to=\"/auth\" />}\n          </Route>\n          <Route path=\"/auth\">\n            {loggedIn && <Redirect to=\"/quotes\" />}\n            {!loggedIn && <AuthPage />}\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            {loggedIn && <QuoteDetails />}\n            {!loggedIn && <Redirect to=\"/auth\" />}\n          </Route>\n          <Route path=\"/quotes\">\n            {loggedIn && <AllQuotes />}\n            {!loggedIn && <Redirect to=\"/auth\" />}\n          </Route>\n          <Route path=\"/new-quote\" exact>\n            {loggedIn && <NewQuote />}\n            {!loggedIn && <Redirect to=\"/auth\" />}\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { AuthContextProvider } from './store/auth-context';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};"],"sourceRoot":""}