{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","components/quotes/DeleteQuote.js","pages/QuoteDetails.js"],"names":["module","exports","NewCommentForm","props","history","useHistory","authCtx","useContext","AuthContext","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddComment","useEffect","submitFormHandler","event","preventDefault","EnteredText","current","value","token","commentData","comment","quote_id","quoteId","go","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","text","CommentsList","comments","map","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","quote","onClick","HighlightedQuote","author","button","deletionHandler","DeleteQuote","a","fetch","method","headers","Authorization","ok","Error","QuoteDetails","isLoading","setIsLoading","match","useRouteMatch","getSingleQuote","loadedQuote","data","addedCommentsHandler","useCallback","push","path","exact","to","url"],"mappings":"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","file":"static/js/6.7a1c3f6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\",\"button\":\"HighlightedQuote_button__3iDRk\"};","import { useRef, useEffect, useContext } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\n\nconst NewCommentForm = (props) => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddComment();\n    }\n  }, [status, onAddComment, error]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const EnteredText = commentTextRef.current.value;\n    sendRequest({\n      token: authCtx.token,\n      commentData: {\n        comment: EnteredText,\n        quote_id: props.quoteId,\n      },\n    });\n    history.go(0);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.comment} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n// import LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n// import useHttp from '../../components/hooks/use-http';\n// import { addComment } from '../lib/api';\n// import { getAllComments } from '../lib/api';\n\nconst Comments = (props) => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  // const { sendRequest } = useHttp(addComment);\n\n  // const quoteId = params.quoteId;\n\n  // useEffect(() => {\n  //   sendRequest(quoteId);\n  // }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  // const addedCommentsHandler = useCallback(() => {\n  //   sendRequest(quoteId);\n  // }, [quoteId, sendRequest]);\n\n  let comments = props.quote.comments;\n  // if (status === 'pending') {\n  //   comments = (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner />\n  //     </div>\n  //   );\n  // }\n  // if (status === 'completed') {\n  // comments = <CommentsList comments={loadedComments} />;\n  // }\n  // if (\n  //   status === 'completed' &&\n  //   (!loadedComments || loadedComments.length === 0)\n  // ) {\n  //   comments = <p className=\"centered\">No Comments Found.</p>;\n  // }\n\n  comments = <CommentsList comments={comments} />;\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddComment={props.onAddComment}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n      <button className={classes.button} onClick={props.deletionHandler}>\n        Delete\n      </button>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","// import { useContext } from 'react';\n// import AuthContext from '../../store/auth-context';\nconst DeleteQuote = async (props) => {\n  const responce = await fetch(\n    `http://ec2-13-233-232-148.ap-south-1.compute.amazonaws.com:8080/quotes/${props.id}`,\n    {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${props.token}`,\n      },\n    }\n  );\n\n  if (!responce.ok) {\n    throw new Error('Could not detele quote.');\n  }\n  return true;\n};\n\nexport default DeleteQuote;\n","import { Fragment, useEffect, useState, useCallback, useContext } from 'react';\nimport {\n  useParams,\n  Route,\n  NavLink,\n  useRouteMatch,\n  useHistory,\n} from 'react-router-dom';\n\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport DeleteQuote from '../components/quotes/DeleteQuote';\nimport useHttp from '../components/hooks/use-http';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { getSingleQuote } from '../components/lib/api';\nimport AuthContext from '../store/auth-context';\n\nconst QuoteDetails = (props) => {\n  const authCtx = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  const addedCommentsHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  useEffect(() => {\n    sendRequest({ id: quoteId, token: authCtx.token });\n  }, [sendRequest, quoteId, authCtx, authCtx.token]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  // console.log(loadedQuote);\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote) {\n    return <p>No Quote Found</p>;\n  }\n\n  const deletionHandler = () => {\n    // console.log('delete ' + loadedQuote.id);\n    setIsLoading(true);\n    DeleteQuote({ id: loadedQuote.id, token: authCtx.token });\n    setIsLoading(false);\n    history.push('/new-quote');\n  };\n\n  // console.log(props.quotes);\n\n  return (\n    <Fragment>\n      {isLoading && <LoadingSpinner />}\n      <HighlightedQuote\n        text={loadedQuote.quote}\n        author={loadedQuote.author}\n        id={loadedQuote.id}\n        deletionHandler={deletionHandler}\n      />\n      <div className=\"centered\">\n        <Route path={match.path} exact>\n          <NavLink className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </NavLink>\n        </Route>\n      </div>\n      <Route path={`${match.path}/comments/`}>\n        <Comments quote={loadedQuote} onAddComment={addedCommentsHandler} />\n        <div className=\"centered\">\n          <NavLink className=\"btn--flat\" to={`${match.url}`}>\n            Hide Comments\n          </NavLink>\n        </div>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n"],"sourceRoot":""}